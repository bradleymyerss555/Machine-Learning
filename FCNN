{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNglePUqctF+nN0o4jmcG+D"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"UYjVs34eF3jp","executionInfo":{"status":"ok","timestamp":1710110266433,"user_tz":240,"elapsed":7108,"user":{"displayName":"Bradley Myers","userId":"02849316620713488374"}}},"outputs":[],"source":["# Load the data and appropriate packages for this model\n","from keras.models import Sequential\n","from keras.layers import Dense\n","import numpy\n","numpy.random.seed(7)"]},{"cell_type":"markdown","source":["The Sequential model class allows layers to be added one by one to a model. The Dense layer class is for creating a fully connected neural network. Numpy works with large arrays to develop computations and data analysis. Random.seed allows for consistency in random number generation across the model."],"metadata":{"id":"AHnEbby_KG1a"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive', force_remount = True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sm3aGAGqLTrW","executionInfo":{"status":"ok","timestamp":1710110397257,"user_tz":240,"elapsed":17690,"user":{"displayName":"Bradley Myers","userId":"02849316620713488374"}},"outputId":"d6b33f26-0db7-4816-f2bb-799dddcacc4a"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["file_path = '/content/drive/My Drive/MSBA/Spring 2024/BMSO758Q/Assignments/FCNN/pima-indians-diabetes.data.csv'"],"metadata":{"id":"9YfWu9rLMMqw","executionInfo":{"status":"ok","timestamp":1710110401010,"user_tz":240,"elapsed":155,"user":{"displayName":"Bradley Myers","userId":"02849316620713488374"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# Define Variables\n","# dataset = numpy.loadtxt(\"pima-indians-diabetes.csv\", delimiter=\",\")\n","dataset = numpy.loadtxt(file_path, delimiter=\",\")\n","X = dataset[:,0:8]\n","Y = dataset[:,8]"],"metadata":{"id":"F8DoXcD6IQ0g","executionInfo":{"status":"ok","timestamp":1710110404048,"user_tz":240,"elapsed":1204,"user":{"displayName":"Bradley Myers","userId":"02849316620713488374"}}},"execution_count":4,"outputs":[]},{"cell_type":"markdown","source":["These lines of code load in the Pima Indians Diabetes dataset and establish columns 1-8 as independent variables (X) and column 9 as the dependent variable (Y). Columns 1-8 are characteristics of participants and are used in the model to predict the dependent variable classification of the participant as diabetic or non-diabetic."],"metadata":{"id":"b_IBo19uREBe"}},{"cell_type":"code","source":["# Define Model\n","model = Sequential()\n","model.add(Dense(12, input_dim=8, activation='relu'))\n","model.add(Dense(8, activation='relu'))\n","model.add(Dense(1, activation='sigmoid'))"],"metadata":{"id":"YT5YtY-fNn3e","executionInfo":{"status":"ok","timestamp":1710110411491,"user_tz":240,"elapsed":164,"user":{"displayName":"Bradley Myers","userId":"02849316620713488374"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":["This code creates an empty model with the Sequential class which allows layers to be added one by one to the model.\n","\n","The first layer added will have 12 neurons with 8 input variables that will be fed into this layer. This layer will use the ReLu activation funtion.\n","\n","The next layer will have 8 neurons also with a ReLu activation function.\n","\n","The final layer added will have 1 neron and use the Sigmoid activation function.\n","\n","Overall there are 2 hidden layers in this Fully Connected Neural Network with 8 inputs into the first layer and 1 resulting output layer."],"metadata":{"id":"txJMd4hEUbKV"}},{"cell_type":"code","source":["# Compile Model\n","model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])"],"metadata":{"id":"9t34F36LNq49","executionInfo":{"status":"ok","timestamp":1710110414227,"user_tz":240,"elapsed":173,"user":{"displayName":"Bradley Myers","userId":"02849316620713488374"}}},"execution_count":7,"outputs":[]},{"cell_type":"markdown","source":["This compiles the neural network and establishes some hyperparameters for the model. Since this is a binary classiciation task, the model will use the Binary Crossentropy loss function.\n","\n","The Adam optimizizer is used as an adaptive learning rate optimization algorithm. This adapts the learning rate during the training process.\n","\n","The metric used to evaluate the performance of the model is accuracy. This will show the proportion of correctly classified istances out of the total number of instances."],"metadata":{"id":"1-uzXyCVYfBT"}},{"cell_type":"code","source":["# Fit Model\n","model.fit(X, Y, epochs=150, batch_size=10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2coyrq5jNvSN","executionInfo":{"status":"ok","timestamp":1710110458654,"user_tz":240,"elapsed":42148,"user":{"displayName":"Bradley Myers","userId":"02849316620713488374"}},"outputId":"c2931f35-0436-4729-fffa-fe2695e32412"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/150\n","77/77 [==============================] - 1s 2ms/step - loss: 1.5425 - accuracy: 0.6094\n","Epoch 2/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.9432 - accuracy: 0.6576\n","Epoch 3/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.8342 - accuracy: 0.6602\n","Epoch 4/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.7589 - accuracy: 0.6680\n","Epoch 5/150\n","77/77 [==============================] - 0s 4ms/step - loss: 0.6854 - accuracy: 0.6849\n","Epoch 6/150\n","77/77 [==============================] - 0s 5ms/step - loss: 0.6666 - accuracy: 0.6654\n","Epoch 7/150\n","77/77 [==============================] - 0s 6ms/step - loss: 0.6351 - accuracy: 0.6719\n","Epoch 8/150\n","77/77 [==============================] - 0s 5ms/step - loss: 0.6323 - accuracy: 0.6758\n","Epoch 9/150\n","77/77 [==============================] - 0s 4ms/step - loss: 0.6136 - accuracy: 0.6654\n","Epoch 10/150\n","77/77 [==============================] - 0s 4ms/step - loss: 0.6005 - accuracy: 0.6901\n","Epoch 11/150\n","77/77 [==============================] - 0s 6ms/step - loss: 0.5851 - accuracy: 0.7044\n","Epoch 12/150\n","77/77 [==============================] - 0s 5ms/step - loss: 0.6059 - accuracy: 0.6836\n","Epoch 13/150\n","77/77 [==============================] - 0s 4ms/step - loss: 0.5757 - accuracy: 0.7135\n","Epoch 14/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5762 - accuracy: 0.6914\n","Epoch 15/150\n","77/77 [==============================] - 0s 4ms/step - loss: 0.5765 - accuracy: 0.7070\n","Epoch 16/150\n","77/77 [==============================] - 0s 4ms/step - loss: 0.5755 - accuracy: 0.7018\n","Epoch 17/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5786 - accuracy: 0.7005\n","Epoch 18/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5633 - accuracy: 0.7148\n","Epoch 19/150\n","77/77 [==============================] - 0s 4ms/step - loss: 0.5647 - accuracy: 0.7083\n","Epoch 20/150\n","77/77 [==============================] - 0s 4ms/step - loss: 0.5695 - accuracy: 0.6953\n","Epoch 21/150\n","77/77 [==============================] - 0s 5ms/step - loss: 0.5574 - accuracy: 0.7201\n","Epoch 22/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5534 - accuracy: 0.7096\n","Epoch 23/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5665 - accuracy: 0.7044\n","Epoch 24/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5555 - accuracy: 0.6966\n","Epoch 25/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5500 - accuracy: 0.7122\n","Epoch 26/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5471 - accuracy: 0.7292\n","Epoch 27/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5501 - accuracy: 0.7240\n","Epoch 28/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5514 - accuracy: 0.7096\n","Epoch 29/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5631 - accuracy: 0.7083\n","Epoch 30/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5581 - accuracy: 0.7279\n","Epoch 31/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5429 - accuracy: 0.7266\n","Epoch 32/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5426 - accuracy: 0.7174\n","Epoch 33/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5445 - accuracy: 0.7305\n","Epoch 34/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5510 - accuracy: 0.7227\n","Epoch 35/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5467 - accuracy: 0.7214\n","Epoch 36/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5495 - accuracy: 0.7253\n","Epoch 37/150\n","77/77 [==============================] - 0s 4ms/step - loss: 0.5406 - accuracy: 0.7383\n","Epoch 38/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5369 - accuracy: 0.7292\n","Epoch 39/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5447 - accuracy: 0.7305\n","Epoch 40/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5263 - accuracy: 0.7383\n","Epoch 41/150\n","77/77 [==============================] - 0s 4ms/step - loss: 0.5256 - accuracy: 0.7422\n","Epoch 42/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5285 - accuracy: 0.7474\n","Epoch 43/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5303 - accuracy: 0.7383\n","Epoch 44/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5280 - accuracy: 0.7422\n","Epoch 45/150\n","77/77 [==============================] - 0s 4ms/step - loss: 0.5236 - accuracy: 0.7539\n","Epoch 46/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5381 - accuracy: 0.7500\n","Epoch 47/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5423 - accuracy: 0.7357\n","Epoch 48/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5329 - accuracy: 0.7435\n","Epoch 49/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5291 - accuracy: 0.7422\n","Epoch 50/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5331 - accuracy: 0.7344\n","Epoch 51/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5301 - accuracy: 0.7383\n","Epoch 52/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5388 - accuracy: 0.7266\n","Epoch 53/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5235 - accuracy: 0.7461\n","Epoch 54/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5234 - accuracy: 0.7305\n","Epoch 55/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5191 - accuracy: 0.7513\n","Epoch 56/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5253 - accuracy: 0.7435\n","Epoch 57/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5266 - accuracy: 0.7370\n","Epoch 58/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5224 - accuracy: 0.7461\n","Epoch 59/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5253 - accuracy: 0.7383\n","Epoch 60/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5267 - accuracy: 0.7409\n","Epoch 61/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5101 - accuracy: 0.7578\n","Epoch 62/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5145 - accuracy: 0.7630\n","Epoch 63/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5210 - accuracy: 0.7370\n","Epoch 64/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5232 - accuracy: 0.7383\n","Epoch 65/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5267 - accuracy: 0.7461\n","Epoch 66/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5144 - accuracy: 0.7513\n","Epoch 67/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5199 - accuracy: 0.7344\n","Epoch 68/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5187 - accuracy: 0.7461\n","Epoch 69/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5067 - accuracy: 0.7643\n","Epoch 70/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5113 - accuracy: 0.7526\n","Epoch 71/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5145 - accuracy: 0.7422\n","Epoch 72/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5181 - accuracy: 0.7565\n","Epoch 73/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5214 - accuracy: 0.7409\n","Epoch 74/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5255 - accuracy: 0.7474\n","Epoch 75/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5117 - accuracy: 0.7565\n","Epoch 76/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5063 - accuracy: 0.7474\n","Epoch 77/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5110 - accuracy: 0.7500\n","Epoch 78/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5089 - accuracy: 0.7526\n","Epoch 79/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5103 - accuracy: 0.7396\n","Epoch 80/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5243 - accuracy: 0.7435\n","Epoch 81/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5049 - accuracy: 0.7578\n","Epoch 82/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5058 - accuracy: 0.7474\n","Epoch 83/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5056 - accuracy: 0.7591\n","Epoch 84/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4959 - accuracy: 0.7604\n","Epoch 85/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5024 - accuracy: 0.7552\n","Epoch 86/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5001 - accuracy: 0.7552\n","Epoch 87/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5137 - accuracy: 0.7500\n","Epoch 88/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5106 - accuracy: 0.7526\n","Epoch 89/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4946 - accuracy: 0.7630\n","Epoch 90/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5040 - accuracy: 0.7604\n","Epoch 91/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4997 - accuracy: 0.7630\n","Epoch 92/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5096 - accuracy: 0.7578\n","Epoch 93/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4985 - accuracy: 0.7682\n","Epoch 94/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4973 - accuracy: 0.7721\n","Epoch 95/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4906 - accuracy: 0.7721\n","Epoch 96/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4965 - accuracy: 0.7604\n","Epoch 97/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4967 - accuracy: 0.7578\n","Epoch 98/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4916 - accuracy: 0.7669\n","Epoch 99/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4972 - accuracy: 0.7565\n","Epoch 100/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.5085 - accuracy: 0.7591\n","Epoch 101/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4943 - accuracy: 0.7747\n","Epoch 102/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4962 - accuracy: 0.7565\n","Epoch 103/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4911 - accuracy: 0.7734\n","Epoch 104/150\n","77/77 [==============================] - 0s 4ms/step - loss: 0.4940 - accuracy: 0.7591\n","Epoch 105/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.4965 - accuracy: 0.7669\n","Epoch 106/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.4984 - accuracy: 0.7734\n","Epoch 107/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.5015 - accuracy: 0.7591\n","Epoch 108/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.4849 - accuracy: 0.7734\n","Epoch 109/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.4946 - accuracy: 0.7682\n","Epoch 110/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.4894 - accuracy: 0.7656\n","Epoch 111/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.4884 - accuracy: 0.7760\n","Epoch 112/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.4926 - accuracy: 0.7617\n","Epoch 113/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.4927 - accuracy: 0.7669\n","Epoch 114/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.4782 - accuracy: 0.7760\n","Epoch 115/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.4888 - accuracy: 0.7721\n","Epoch 116/150\n","77/77 [==============================] - 0s 4ms/step - loss: 0.4852 - accuracy: 0.7708\n","Epoch 117/150\n","77/77 [==============================] - 0s 4ms/step - loss: 0.4904 - accuracy: 0.7682\n","Epoch 118/150\n","77/77 [==============================] - 0s 4ms/step - loss: 0.4842 - accuracy: 0.7747\n","Epoch 119/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4806 - accuracy: 0.7682\n","Epoch 120/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4797 - accuracy: 0.7721\n","Epoch 121/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.4866 - accuracy: 0.7591\n","Epoch 122/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4940 - accuracy: 0.7552\n","Epoch 123/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4796 - accuracy: 0.7760\n","Epoch 124/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4783 - accuracy: 0.7786\n","Epoch 125/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4806 - accuracy: 0.7734\n","Epoch 126/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4817 - accuracy: 0.7643\n","Epoch 127/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4831 - accuracy: 0.7708\n","Epoch 128/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4780 - accuracy: 0.7708\n","Epoch 129/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4812 - accuracy: 0.7682\n","Epoch 130/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4805 - accuracy: 0.7773\n","Epoch 131/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4809 - accuracy: 0.7669\n","Epoch 132/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4790 - accuracy: 0.7721\n","Epoch 133/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4914 - accuracy: 0.7656\n","Epoch 134/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4829 - accuracy: 0.7773\n","Epoch 135/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4777 - accuracy: 0.7747\n","Epoch 136/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4824 - accuracy: 0.7630\n","Epoch 137/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4773 - accuracy: 0.7643\n","Epoch 138/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4765 - accuracy: 0.7617\n","Epoch 139/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.4835 - accuracy: 0.7773\n","Epoch 140/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4781 - accuracy: 0.7721\n","Epoch 141/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4699 - accuracy: 0.7721\n","Epoch 142/150\n","77/77 [==============================] - 0s 3ms/step - loss: 0.4682 - accuracy: 0.7826\n","Epoch 143/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4716 - accuracy: 0.7760\n","Epoch 144/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4756 - accuracy: 0.7747\n","Epoch 145/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4774 - accuracy: 0.7721\n","Epoch 146/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4919 - accuracy: 0.7747\n","Epoch 147/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4764 - accuracy: 0.7734\n","Epoch 148/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4784 - accuracy: 0.7721\n","Epoch 149/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4694 - accuracy: 0.7786\n","Epoch 150/150\n","77/77 [==============================] - 0s 2ms/step - loss: 0.4640 - accuracy: 0.7786\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.History at 0x7d5b6826f2e0>"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["Here the data is put into the model. The 8 independent variables are the input layer to the model with the output layer being the dependent variables/classification. The data is passed through the hidden layers a total of 150 times, know as the number of epochs. In each epoch, 10 training examples are used before the parametes are updated"],"metadata":{"id":"B6Zuuo8yZLqa"}},{"cell_type":"code","source":["# Evaluate Model\n","scores = model.evaluate(X, Y)\n","print(\"\\n%s: %.2f%%\" % (model.metrics_names[1], scores[1]*100))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lZVeRcI8N_o3","executionInfo":{"status":"ok","timestamp":1710110458817,"user_tz":240,"elapsed":166,"user":{"displayName":"Bradley Myers","userId":"02849316620713488374"}},"outputId":"3f60a012-8d40-406f-b502-020eb06fd65b"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["24/24 [==============================] - 0s 2ms/step - loss: 0.4883 - accuracy: 0.7643\n","\n","accuracy: 76.43%\n"]}]},{"cell_type":"markdown","source":["The model is evaluated based on its accuracy in predicting the classification of whether or not the participant has diabetes based on the given data. The model performs with 76.43% accuracy. If this model was used to predict the classification of the 768 participants, 586 of the participants would receive accurate predictions."],"metadata":{"id":"o4wGgbTreFdX"}}]}